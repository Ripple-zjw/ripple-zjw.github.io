<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>优先队列 on LeaveIt</title>
    <link>https://ripple-zjw.github.io/tags/%E4%BC%98%E5%85%88%E9%98%9F%E5%88%97/</link>
    <description>Recent content in 优先队列 on LeaveIt</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sat, 21 Sep 2019 15:30:13 +0800</lastBuildDate>
    
	<atom:link href="https://ripple-zjw.github.io/tags/%E4%BC%98%E5%85%88%E9%98%9F%E5%88%97/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>数组中的第K个最大元素</title>
      <link>https://ripple-zjw.github.io/2019/%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E7%AC%ACk%E4%B8%AA%E6%9C%80%E5%A4%A7%E5%85%83%E7%B4%A0/</link>
      <pubDate>Sat, 21 Sep 2019 15:30:13 +0800</pubDate>
      
      <guid>https://ripple-zjw.github.io/2019/%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E7%AC%ACk%E4%B8%AA%E6%9C%80%E5%A4%A7%E5%85%83%E7%B4%A0/</guid>
      <description>题目：数组中的第K个最大元素  在未排序的数组中找到第k个最大的元素。请注意，你需要找的是数组排序后的第 k 个最大的元素，而不是第 k 个不同的元素。  示例 1: 输入: [3,2,1,5,6,4] 和 k = 2 输出: 5  示例 2: 输入: [3,2,3,1,2,4,5,5,6] 和 k = 4 输出: 4  说明:  你可以假设 k 总是有效的，且 1 ≤ k ≤ 数组的长度。  来源：力扣（LeetCode）第215题  链接：https://leetcode-cn.com/problems/kth-largest-element-in-an-array
 分析：  有两种做法，一种是使用快排思想，选中一个数，对其进行partition。 第二种做法是使用堆，维护一个大顶堆，要拿到第k大元素就删除堆顶k次  代码：  快速排序改进：
class Solution: def findKthLargest(self, nums: List[int], k: int) -&amp;gt; int: self.k = k ans = self.quickSort(nums, 0, len(nums) - 1) return ans if ans else nums[k-1] def portition(self, arr, start, end): pivot = arr[end] i = start - 1 for j in range(start, end): if pivot &amp;lt; arr[j]: i += 1 arr[i], arr[j] = arr[j], arr[i] arr[i+1], arr[end] = arr[end], arr[i+1] return i + 1 def quickSort(self, arr, start, end): if start &amp;lt; end: pivot = self.</description>
    </item>
    
  </channel>
</rss>