<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>斐波那契 on LeaveIt</title>
    <link>https://ripple-zjw.github.io/tags/%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91/</link>
    <description>Recent content in 斐波那契 on LeaveIt</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Wed, 23 Oct 2019 20:09:39 +0800</lastBuildDate>
    
	<atom:link href="https://ripple-zjw.github.io/tags/%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>最长的斐波那契子序列的长度</title>
      <link>https://ripple-zjw.github.io/2019/%E6%9C%80%E9%95%BF%E7%9A%84%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E5%AD%90%E5%BA%8F%E5%88%97%E7%9A%84%E9%95%BF%E5%BA%A6/</link>
      <pubDate>Wed, 23 Oct 2019 20:09:39 +0800</pubDate>
      
      <guid>https://ripple-zjw.github.io/2019/%E6%9C%80%E9%95%BF%E7%9A%84%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E5%AD%90%E5%BA%8F%E5%88%97%E7%9A%84%E9%95%BF%E5%BA%A6/</guid>
      <description>题目：最长的斐波那契子序列的长度  如果序列X_1, X_2, ..., X_n满足下列条件，就说它是斐波那契式的： n &amp;gt;= 3 对于所有i + 2 &amp;lt;= n，都有X_i + X_{i+1} = X_{i+2} 给定一个严格递增的正整数数组形成序列，找到 A 中最长的斐波那契式的子序列的长度。如果一个不存在，返回0 。 （回想一下，子序列是从原序列A中派生出来的，它从A中删掉任意数量的元素（也可以不删），而不改变其余元素的顺序。例如，[3, 5, 8]是[3, 4, 5, 6, 7, 8]的一个子序列）  示例 1： 输入: [1,2,3,4,5,6,7,8] 输出: 5 解释: 最长的斐波那契式子序列为：[1,2,3,5,8] 。  示例2： 输入: [1,3,7,11,12,14,18] 输出: 3 解释: 最长的斐波那契式子序列有： [1,11,12]，[3,11,14] 以及 [7,11,18] 。  提示：  3 &amp;lt;= A.length &amp;lt;= 1000 1 &amp;lt;= A[0] &amp;lt; A[1] &amp;lt; &amp;hellip; &amp;lt; A[A.length - 1] &amp;lt;= 10^9 （对于以 Java，C，C++，以及C# 的提交，时间限制被减少了 50%）  来源：力扣（LeetCode）第873题  链接：https://leetcode-cn.</description>
    </item>
    
  </channel>
</rss>